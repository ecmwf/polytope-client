name: Check and publish

on:

  push:
    branches:
    - '**'
    tags:
    - '**'

  pull_request: ~

  workflow_dispatch: ~

  release:
    types: [created]

jobs:

  quality:
    name: Code QA
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pip install black flake8 isort
      - run: black --version
      - run: isort --check .
      - run: black --check .
      - run: flake8 .

  checks:
    strategy:
      fail-fast: false
      matrix:
        platform: ["ubuntu-latest"]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    name: Python ${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    needs: quality
    steps:
      - uses: actions/checkout@v4
      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install polytope-client
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          pip install -e .
          pip install -r docs/requirements.txt
      - name: Unit tests
        run: |
          pip install pytest pytest-cov
          pytest -v --cov=polytope --cache-clear
      - name: Documentation
        run: |
          make clean
          make html
        working-directory: docs

  deploy:
    needs: checks
    if: ${{ github.event_name == 'release' }}
    name: Upload to Pypi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine build
      - name: Build and publish
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m build
          twine upload dist/* --verbose
