name: Check and publish

on:

  push:
    branches:
    - '**'
    tags:
    - '**'

  pull_request: ~

  workflow_dispatch: ~

jobs:

  quality:
    name: Code QA
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: pip install black flake8 isort
      - run: black --version
      - run: isort --check .
      - run: black --check .
      - run: flake8 .

  checks:
    strategy:
      fail-fast: false
      matrix:
        platform: ["ubuntu-latest"]
        python-version: ["3.7", "3.8", "3.9"]
    name: Python ${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    needs: quality
    steps:
      - uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install polytope-client
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          pip install -e .
      - name: Unit tests
        run: |
          pip install pytest pytest-cov
          pytest -v --cov=polytope --cache-clear
      - name: Documentation
        run: |
          make clean
          make html
        working-directory: docs

  deploy:
    if: ${{ github.event_name == 'release' }}
    name: Upload to Pypi
    needs: [checks]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Check version
        run: |
          release=${GITHUB_REF##*/}
          version=$(python setup.py --version)
          test "$release" == "$version"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/* --verbose

  publish:
    if: ${{ github.event_name == 'release' }}
    name: Publish on Readthedocs
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Start polytope-docs build
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.ECMWF_REPO_ACCESS }}
          script: |-
            await github.actions.createWorkflowDispatch({
                owner: 'ecmwf-projects',
                repo: 'polytope-docs',
                workflow_id: 'publish.yaml',
                ref: 'master'
            });
